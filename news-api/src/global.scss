@use "sass:math";
@import "./components/view/scss/mixins.scss";



// body {
//     color: #fff;
//     background: #17181c;
//     font-family: sans-serif;
// }

// header {
//     padding: 10px 30px;
// }

// header h1 {
//     font-size: 40px;
//     font-weight: 800;
// }



// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: "";
$fontSize: rem(14); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию

// Настройки адаптивной сетки ===============================================================================================================================================================================================================================================================================================

// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

@import "./components/view/scss/null.scss";

body {
    color: #fff;
    background: #17181c;

}

// Оболочка wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
    min-height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    // Прижимаем footer
    > main {
        flex: 1 1 auto;
    }

}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
    // Отзывчивая
    [class*="__container"] {
        @if ($maxWidthContainer>0) {
            max-width: rem($containerWidth);
            margin: 0 auto;
        }
        @if ($containerPadding>0) {
            @if ($maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            } @else {
                @include adaptiveValue("padding-left", math.div($containerPadding, 2), 15);
                @include adaptiveValue("padding-right", math.div($containerPadding, 2), 15);
            }
        }
    }
} @else {
    // По брейк-поинтам
    [class*="__container"] {
        margin: 0 auto;
        @if ($maxWidthContainer>0) {
            max-width: rem($containerWidth);
        } @else {
            @if ($containerPadding>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
        @media (max-width: $pc) {
            max-width: rem(970);
        }
        @media (max-width: $tablet) {
            max-width: rem(750);
        }
        @media (max-width: $mobile) {
            max-width: none;
            @if ($containerPadding>0 and $maxWidthContainer>0) {
                padding: 0 rem(math.div($containerPadding, 2));
            }
        }
    }
}

.header {
    position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 50;
  transition: all 0.3s ease 0s;

    // .header__container

    &__container {
      font-weight: 800;
      @include adaptiveValue("padding-top", 60, 10);
      @include adaptiveValue("padding-bottom", 60, 10);
      @include adaptiveValue("font-size", 40, 20);

    }
}

.main {

  // .main__container

  &__container {
  }
}
.sources {
}
.buttons {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  min-height: rem(200);
  font-size: rem(16);
  @include adaptiveValue("font-size", 16, 12);

}
.news {
  display: flex;
}



